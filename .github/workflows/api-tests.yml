name: API Tests Workflow

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  # JOB 1: Build the Auth Microservice
  build-and-test:
    name: Build Spring Boot App
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
        options: >-
          --health-cmd="mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Package Application
        run: mvn package -DskipTests

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: auth-microservice-jar
          path: target/*.jar

  # JOB 2: Run Integration/Contract Tests
  contract-tests:
    name: Run API Contract Tests
    runs-on: ubuntu-latest
    needs: build-and-test

    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017

    steps:
      - name: Checkout auth microservice
        uses: actions/checkout@v4

      - name: Checkout contract tests repository
        uses: actions/checkout@v4
        with:
          repository: sirkiru/auth-service-contract-tests
          path: contract-tests

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Start Auth Microservice
        run: |
          mvn spring-boot:run -Dspring-boot.run.profiles=test &
          echo "Waiting for application to start..."
          timeout 120s bash -c 'until curl -f http://localhost:8080/actuator/health; do sleep 5; done'
          echo "Application started successfully!"

      - name: Run Contract Tests
        run: |
          cd contract-tests
          mvn clean test -Dbase.url=http://localhost:8080

      - name: Upload ExtentReports
        uses: actions/upload-artifact@v4
        with:
          name: extent-report
          path: contract-tests/test-output/ExtentReport.html
